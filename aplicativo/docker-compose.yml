version: '3.4'

services:

  mysql_server:
    #Ignorado cuando se usa en modo swarm (swarm usa imágenes de un registry)
    build: ./basedatos/
    image: cemp2703/java-aws-tf-bd
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_DATABASE=demobd
      - MYSQL_USER=app
      - MYSQL_PASSWORD=toor
      - MYSQL_ROOT_HOST=%
    volumes: 
      - ./basedatos/scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "3310:3306"
    #Ignorado cuando se usa en swarm mode (usar restart_policy)
    restart: on-failure
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - backend

  monolito:
    build: ./monolito/
    image: cemp2703/java-aws-tf-monolito
    environment:
      - userPoolId=us-east-1_sm2FOkV3i
      - clientId=247aa428sfr4loop1el4ltik0v
      - host=mysql_server
      - port=3306
      - database=demobd
      - username=root
      - password=12345678
      - AWS_ACCESS_KEY_ID=AKIA26USRBXKZDSN43G3
      - AWS_SECRET_ACCESS_KEY=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
      - aws_Region_Cognito=us-east-1
    depends_on:
      - mysql_server
    #Si no especifico un puerto host, se creará uno aleatorio
    ports:
    - "8081:8080"
    restart: on-failure
    #Sobreescribiendo el entrypoint del dockerfile
    entrypoint: dockerize -wait tcp://mysql_server:3306 -timeout 10m java -jar /workspace/app.jar
    networks:
      - backend

volumes:
  my-data:

networks:
  backend: 